{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","images","useState","itemWidth","setItemWidth","frameSize","setFrameSize","step","setStep","animationDuration","setAnimationDuration","scrollSize","setScrollSize","isRightButtonDisabled","setIsRightButtonDisabled","isLeftButtonDisabled","setIsLeftButtonDisabled","widthOfContainer","className","style","width","transform","transition","map","image","index","flex","height","src","alt","toString","type","onClick","current","disabled","name","placeholder","value","onChange","event","target","App","slides","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cd4416c4.chunk.js","sourcesContent":["import React, { ChangeEvent, useState } from 'react';\nimport './Carousel.scss';\n\ninterface Props {\n  images: string[];\n}\n\nconst Carousel: React.FC<Props> = ({ images }) => {\n  const [itemWidth, setItemWidth] = useState(130);\n  const [frameSize, setFrameSize] = useState(3);\n  const [step, setStep] = useState(3);\n  const [animationDuration, setAnimationDuration] = useState(1000);\n  const [scrollSize, setScrollSize] = useState(0);\n  const [isRightButtonDisabled, setIsRightButtonDisabled] = useState(false);\n  const [isLeftButtonDisabled, setIsLeftButtonDisabled] = useState(true);\n\n  const widthOfContainer = itemWidth * 10;\n\n  const handleAnimationDuration = (event: ChangeEvent<HTMLInputElement>) => {\n    setAnimationDuration(+event.target.value);\n  };\n\n  const handleItemWidth = (event: ChangeEvent<HTMLInputElement>) => {\n    setItemWidth(+event.target.value);\n  };\n\n  const handleFrameSize = (event: ChangeEvent<HTMLInputElement>) => {\n    setFrameSize(+event.target.value);\n  };\n\n  const handleStepsQuantity = (event: ChangeEvent<HTMLInputElement>) => {\n    setStep(+event.target.value);\n  };\n\n  const handleScrollRight = () => {\n    setIsLeftButtonDisabled(false);\n    setScrollSize(current => {\n      if ((current + step * itemWidth)\n      > (widthOfContainer - frameSize * itemWidth)) {\n        setIsRightButtonDisabled(true);\n\n        return widthOfContainer - frameSize * itemWidth;\n      }\n\n      return current + step * itemWidth;\n    });\n  };\n\n  const handleScrollLeft = () => {\n    setIsRightButtonDisabled(false);\n    setScrollSize(current => {\n      if ((current - step * itemWidth) < 0) {\n        setIsLeftButtonDisabled(true);\n\n        return 0;\n      }\n\n      return current - step * itemWidth;\n    });\n  };\n\n  return (\n    <div className=\"Carousel\">\n      <div\n        className=\"Carousel__wrapper\"\n        style={{\n          width: `${frameSize * itemWidth}px`,\n        }}\n      >\n        <ul\n          className=\"Carousel__list\"\n          style={{\n            width: widthOfContainer,\n            transform: `translateX(${-scrollSize}px)`,\n            transition: `transform ${animationDuration}ms ease-out`,\n          }}\n        >\n          {images.map((image, index) => (\n            <li\n              key={image}\n              className=\"Carousel__item\"\n              style={{\n                flex: `0 0 ${itemWidth}px`,\n                height: `${itemWidth}px`,\n              }}\n            >\n              <img\n                className=\"Carousel__img\"\n                src={image}\n                alt={index.toString()}\n              />\n            </li>\n          ))}\n        </ul>\n\n        <div className=\"Carousel__button-wrapper\">\n          <button\n            type=\"button\"\n            className=\"Carousel__button\"\n            onClick={handleScrollLeft}\n            disabled={isLeftButtonDisabled}\n          >\n            {'<'}\n          </button>\n          <button\n            type=\"button\"\n            className=\"Carousel__button\"\n            data-cy=\"next\"\n            onClick={handleScrollRight}\n            disabled={isRightButtonDisabled}\n          >\n            {'>'}\n          </button>\n        </div>\n\n        <form className=\"Carousel__form\">\n          <label className=\"Carousel__form-item\">\n            {'Slid width (px): '}\n\n            <input\n              type=\"text\"\n              className=\"Carousel__form-field\"\n              name=\"itemWidth\"\n              placeholder=\"Slid width\"\n              value={itemWidth}\n              onChange={handleItemWidth}\n            />\n          </label>\n\n          <label className=\"Carousel__form-item\">\n            {'Slides to show: '}\n\n            <input\n              type=\"text\"\n              className=\"Carousel__form-field\"\n              name=\"frameSize\"\n              placeholder=\"Slides to show\"\n              value={frameSize}\n              onChange={handleFrameSize}\n            />\n          </label>\n\n          <label className=\"Carousel__form-item\">\n            {'Slides to scroll: '}\n\n            <input\n              type=\"text\"\n              className=\"Carousel__form-field\"\n              name=\"step\"\n              placeholder=\"Slides to scroll\"\n              value={step}\n              onChange={handleStepsQuantity}\n            />\n          </label>\n\n          <label className=\"Carousel__form-item\">\n            {'Scroll speed (ms): '}\n\n            <input\n              type=\"text\"\n              className=\"Carousel__form-field\"\n              name=\"animationDuration\"\n              placeholder=\"Animation speed\"\n              value={animationDuration}\n              onChange={handleAnimationDuration}\n            />\n          </label>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default Carousel;\n","import { useState } from 'react';\nimport './App.scss';\nimport Carousel from './components/Carousel';\n\nconst images = [\n  './img/1.png',\n  './img/2.png',\n  './img/3.png',\n  './img/4.png',\n  './img/5.png',\n  './img/6.png',\n  './img/7.png',\n  './img/8.png',\n  './img/9.png',\n  './img/10.png',\n];\n\nconst App = () => {\n  const [slides] = useState(images);\n\n  return (\n    <div className=\"App\">\n      <h1 data-cy=\"title\">\n        Carousel with\n        {` ${slides.length} `}\n        images\n      </h1>\n\n      <Carousel\n        images={images}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}